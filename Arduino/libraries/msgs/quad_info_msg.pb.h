/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.6-dev */

#ifndef PB_MESSAGING_QUAD_INFO_MSG_PB_H_INCLUDED
#define PB_MESSAGING_QUAD_INFO_MSG_PB_H_INCLUDED
#include <pb.h>
#include "filtered_state_msg.pb.h"
#include "motors_msg.pb.h"
#include "vicon_msg.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _messaging_QUAD_INFO { 
    bool has_state;
    messaging_FILTERED_STATE state; 
    bool has_input;
    messaging_MOTORS input; 
    bool has_measurement;
    messaging_VICON measurement; 
    double time; 
} messaging_QUAD_INFO;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define messaging_QUAD_INFO_init_default         {false, messaging_FILTERED_STATE_init_default, false, messaging_MOTORS_init_default, false, messaging_VICON_init_default, 0}
#define messaging_QUAD_INFO_init_zero            {false, messaging_FILTERED_STATE_init_zero, false, messaging_MOTORS_init_zero, false, messaging_VICON_init_zero, 0}

/* Field tags (for use in manual encoding/decoding) */
#define messaging_QUAD_INFO_state_tag            1
#define messaging_QUAD_INFO_input_tag            2
#define messaging_QUAD_INFO_measurement_tag      3
#define messaging_QUAD_INFO_time_tag             4

/* Struct field encoding specification for nanopb */
#define messaging_QUAD_INFO_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  state,             1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  input,             2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  measurement,       3) \
X(a, STATIC,   SINGULAR, DOUBLE,   time,              4)
#define messaging_QUAD_INFO_CALLBACK NULL
#define messaging_QUAD_INFO_DEFAULT NULL
#define messaging_QUAD_INFO_state_MSGTYPE messaging_FILTERED_STATE
#define messaging_QUAD_INFO_input_MSGTYPE messaging_MOTORS
#define messaging_QUAD_INFO_measurement_MSGTYPE messaging_VICON

extern const pb_msgdesc_t messaging_QUAD_INFO_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define messaging_QUAD_INFO_fields &messaging_QUAD_INFO_msg

/* Maximum encoded size of messages (where known) */
#define messaging_QUAD_INFO_size                 258

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
